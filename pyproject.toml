[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "music-visualizer"
version = "1.0.0"
authors = [
    {name = "Music Visualizer Developer", email = "developer@musicvisualizer.com"},
]
description = "A wxPython-based music visualization application with real-time audio analysis"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Multimedia :: Sound/Audio :: Players",
    "Topic :: Software Development :: User Interfaces",
]
keywords = ["music", "audio", "visualizer", "gui", "wxpython", "matplotlib", "spectrum", "waveform"]
dependencies = [
    "wxPython>=4.2.0",
    "matplotlib>=3.5.0",
    "numpy>=1.21.0",
    "pygame>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "build",
    "twine",
    "pytest",
    "black",
    "flake8",
]
audio = [
    "librosa>=0.9.0",
    "soundfile>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/music-visualizer"
Repository = "https://github.com/yourusername/music-visualizer.git"
Documentation = "https://github.com/yourusername/music-visualizer#readme"
"Bug Tracker" = "https://github.com/yourusername/music-visualizer/issues"

[project.scripts]
music-visualizer = "music_visualizer:main"

[project.gui-scripts]
music-visualizer-gui = "music_visualizer:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["music_visualizer*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
music_visualizer = ["*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
] 